plugins {
    id 'java'
    id 'application'
    id 'com.github.johnrengelman.shadow' version '1.2.3'
    id 'maven'
    id 'jacoco'
    id 'com.github.kt3k.coveralls' version '2.6.3'
}

group 'com.yevster'

version '0.6-SNAPSHOT'
mainClassName = 'com.yevster.spdxtra.cli.CommandLineTool'
def jenaVersion='3.1.0'
sourceCompatibility = 1.8

repositories {
    mavenCentral()
}

dependencies {

    compile "org.apache.jena:jena-tdb:${jenaVersion}"
    compile 'com.github.jsonld-java:jsonld-java-parent:0.8.3'
    
    testCompile 'org.mockito:mockito-all:1.10.19'
    testCompile 'com.google.guava:guava:19.0'
    testCompile 'junit:junit:4.11'
    
    runtime "org.apache.jena:jena-base:${jenaVersion}"
    runtime "org.apache.jena:jena-core:${jenaVersion}"
    runtime "org.apache.jena:jena-arq:${jenaVersion}"
    runtime "org.apache.jena:jena-shaded-guava:${jenaVersion}"
    runtime 'org.apache.thrift:libthrift:0.9.2'
    runtime 'com.github.andrewoma.dexx:collection:0.6'
}

jar {
    manifest {
        attributes('Implementation-Title': "$rootProject.name", 'Implementation-Version': version, 'Main-Class': mainClassName)
    }
    baseName = 'spdxtra'
}

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}


artifacts {
    archives sourcesJar
}

task writeNewPom << {
    pom {
        project {
            licenses {
                license {
                    name 'The Apache Software License, Version 2.0'
                    url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    distribution 'repo'
                }
            }
        }
    }.writeTo("$buildDir/spdxtra-${version}.pom")
}

jacocoTestReport {
    reports {
        xml.enabled = true // coveralls plugin depends on xml format report
        html.enabled = true
        html.destination "${buildDir}/jacocoHtml"
    }
}
